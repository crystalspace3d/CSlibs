SubDir TOP source ;

# Set up default variables used by our custom.cslib
MsvcRegisterVariableProp importlib : importlib ;
MsvcRegisterVariableProp debuginfo : debuginfo ;
MsvcRegisterVariableProp libname : libname ;
MsvcRegisterVariableProp librarydelay : delayload ;
MsvcRegisterVariableProp configtemplatetag : configtemplatetag ;

MsvcGenVariable linkerextraxml : "MergeSections=\".rdata=.text\"" ;
MsvcRegisterVariableProp linkerextraxml : moduledefinition ;

rule LibCommon
{
  local lib = $(1) ;
  local files = $(2) ;
  local libname = $(3) ;
  local deffile = $(4) ;
  local extrainc = $(5) ;
  local options = $(6) ;
  local dllname = $(7) ;
  if ! $(dllname) { dllname = "lib$(lib)-cs" ; }
  local outdir = $(8) ;
  if ! $(outdir) 
  { 
    if ! [ IsElem norelease : $(options) ]
    {
      outdir = "Release" ; 
    }
    else
    {
      outdir = "Temp" ; 
    }
  }
  
  if ! [ IsElem staticonly : $(options) ]
  {
    MsvcSetTargetProp $(lib) : resources : no ;
    MsvcSetTargetProp $(lib) : outputfile : [ ConcatDirs libs $(outdir) $(dllname).dll ] ;
    MsvcSetTargetProp $(lib) : importlib : [ ConcatDirs libs $(outdir) $(libname).lib ] ;
    MsvcSetTargetProp $(lib) : debuginfo : [ ConcatDirs libs $(outdir) $(dllname).pdb ] ;
    MsvcSetTargetProp $(lib) : moduledefinition : 
      "ModuleDefinitionFile=\"../../$(deffile)\"" ;
    Library $(lib) : $(files) : shared ;
    MsvcExtraFile $(lib) : $(deffile) ;
    local d ;
    for d in $(extrainc)
    {
      MsvcIncDirs $(lib) : [ ConcatDirs [ MsvcWorkbuildToRoot ] $(d) ] ;
    }
  }
  
  if ! [ IsElem nostatic : $(options) ]
  {
    SubVariant static ;
    MsvcSetTargetProp $(lib)_static : resources : no ;
    MsvcSetTargetProp $(lib)_static : debuginfo : [ ConcatDirs libs $(outdir)_static $(libname).pdb ] ;
    MsvcSetTargetProp $(lib)_static : libname : [ ConcatDirs libs $(outdir)_static $(libname) ] ;
    Library $(lib)_static : $(files) ;
    for d in $(extrainc)
    {
      MsvcIncDirs $(lib)_static : [ ConcatDirs [ MsvcWorkbuildToRoot ] $(d) ] ;
    }
    SubVariant ;
  }
}
  
if [ Property build : projgen_version ] = 71
{
  rule BaseLib 
  { 
    LibCommon $(1) : $(2) : $(3) : $(4) : $(5) : $(6) ;
    SetProperty baseliblibs : $(1) : $(3) ;
  }
}
else
{
  rule BaseLib 
  { 
    SetProperty baseliblibs : $(1) : $(3) ;
  }
}

rule ExtraLib
{
  local msvcgenver = [ Property build : projgen_version ] ;
  local lib = $(1) ;
  local libname = $(3)-vc$(msvcgenver) ;
  local rcfile = $(4) ;
  local options = $(6) ;
  local dlldef = $(7) ;
  local staticdef = $(8) ;
  local baselibdeps = $(9) ;
  local outdir d ;
  
  local dllname = lib$(lib)-csvc$(msvcgenver) ;

  if [ IsElem fakestatic : $(options) ]
  {
    options += nostatic ;
  }
  if [ IsElem fakestatic2 : $(options) ]
  {
    outdir = "ReleaseVC$(msvcgenver)Only_static" ;
  }
  else
  {
    outdir = "ReleaseVC$(msvcgenver)Only" ;
  }

  LibCommon $(lib) : $(2) : $(libname) : : $(5) : $(options) : $(dllname) : $(outdir) ;
  for d in $(dlldef) 
  {
    MsvcDefine $(lib) : $(d) ;
  }
  for d in $(staticdef) 
  {
    MsvcDefine $(lib)_static : $(d) ;
  }
  MsvcExtraFile $(lib) : $(rcfile) ;
  if [ Property build : projgen_version ] = 71
  {
    LibDepends $(lib) : $(baselibdeps) ;
  }
  else
  {
    local b ;
    for b in $(baselibdeps)
    {
      MsvcExternalLibrary $(lib) : [ Property baseliblibs : $(b) ] ;
    }
  }
  
  MsvcSetTargetProp $(lib)_debug : configtemplatetag : debug ;
  MsvcSetTargetProp $(lib)_debug_static : configtemplatetag : debug ;
  LibCommon $(lib)_debug : $(2) : $(libname)_d : : $(5) : $(options) : $(dllname)_d : $(outdir) ;
  for d in $(dlldef) 
  {
    MsvcDefine $(lib)_debug : $(d) ;
  }
  for d in $(staticdef) 
  {
    MsvcDefine $(lib)_debug_static : $(d) ;
  }
  MsvcExtraFile $(lib)_debug : $(rcfile) ;
  if [ Property build : projgen_version ] = 71
  {
    LibDepends $(lib)_debug : $(baselibdeps) ;
  }
  else
  {
    local b ;
    for b in $(baselibdeps)
    {
      MsvcExternalLibrary $(lib)_debug : [ Property baseliblibs : $(b) ] ;
    }
  }
  
  if [ IsElem fakestatic : $(options) ]
  {
    local newopts = [ Filter $(options) : fakestatic ] fakestatic2 ;
    ExtraLib $(lib)_static : $(2) : $(3) : $(rcfile) : $(5) : $(newopts) : $(dlldef) : : $(baselibdeps)_static ;
  }
}

include $(TOP)/source/libz.jam ;
include $(TOP)/source/libpng.jam ;
include $(TOP)/source/libjpeg.jam ;
include $(TOP)/source/libmng.jam ;
include $(TOP)/source/libfreetype.jam ;
include $(TOP)/source/libode.jam ;
include $(TOP)/source/lib3ds.jam ;
include $(TOP)/source/libcaca.jam ;
include $(TOP)/source/libjs.jam ;
include $(TOP)/source/libogg.jam ;
include $(TOP)/source/libvorbis.jam ;
include $(TOP)/source/libcal3d.jam ;
include $(TOP)/source/libpcre.jam ;
include $(TOP)/source/libCEGUI.jam ;
