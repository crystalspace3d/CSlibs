#==============================================================================
# TemplateToolkit2 template extension for MSVC7 project (vcproj) file.
# Copyright (C) 2004 by Eric Sunshine <sunshine@sunshineco.com>
#
#    This library is free software; you can redistribute it and/or modify it
#    under the terms of the GNU Library General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or (at your
#    option) any later version.
#
#    This library is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
#    License for more details.
#
#    You should have received a copy of the GNU Library General Public License
#    along with this library; if not, write to the Free Software Foundation,
#    Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#==============================================================================
#------------------------------------------------------------------------------
# This file, projectx7.tlib, provides additional support for the main MSVC7
# project file template, project7.tlib, in the form of macros which customize
# the file generation based upon combinations of build mode and target type.
#
# project7.tlib will look for macros named "tag_build", "tag_type", and
# "tag_type_build".  `tag' is an arbitrary name, such as "compiler" or "linker"
# which project7.tlib will use when looking for customizations for a particular
# section of the project file (such as the compiler or linker sections, for
# instance).  `build' is one of the build mode tag names (typically "release"
# or "debug") from the build[] array (control.tlib).  `type' is one of the
# project types (typically "appcon", "appgui", "group", "library", or "plugin")
# named by the projtypes[] array (control.tlib).
#
# For example, to add customization entries to the compiler portion of the
# project file in release mode for all project types, provide a macro named
# "compiler_release".  To customize linker for plugins only but for all build
# modes, provide the macro "linker_plugin".  To add customizations for the
# compiler in debug mode for GUI application projects only, provide a macro
# named "compiler_appgui_debug".
#------------------------------------------------------------------------------

# Construct a shared lib file name that contains the VC version
[% MACRO library_dll_versuffix GET 
  ('-' _ my.doc.packageversion.0) IF my.doc.packageversion.0 -%]
[% MACRO library_dll_outfile(suffix) GET
  my.doc.rawtarget.0 _ library_dll_versuffix _ '-vc' _ my.doc.msvcversion.0 _ platform.suffix _ suffix
%]
[% MACRO library_lib_outfile(suffix) BLOCK -%]
[% worklibout %]\[% my.doc.project.0 %][% suffix %]
[%- END %]

# Add a platform suffix to a filename's parent directory
[% MACRO add_platform_suffix_dir(filename) BLOCK;
  path_split = filename.split('\\\\');
  filename = path_split.pop();
  last_dir = path_split.pop();
  new_path = path([path(path_split), glue([last_dir, platform.suffix]), filename]);
  GET new_path;
END %]

# Add a platform suffix to a filename's basename
[% MACRO add_platform_suffix_filename(filename) BLOCK;
  path_split = filename.split('\\\\');
  filename = path_split.pop();
  filename_split = filename.split('\\.');
  IF filename_split.size > 1;
    filename = glue([filename_split.0, platform.suffix, '.', filename_split.1]);
  ELSE;
    filename = glue([filename_split.0, platform.suffix]);
  END;
  new_path = path([path(path_split), filename]);
  GET new_path;
END %]

[% MACRO add_platform_suffix(filename) GET 
  add_platform_suffix_filename(add_platform_suffix_dir(slash(filename)))
%]

[% MACRO extract_dir(filename) BLOCK;
  path_split = filename.split('\\\\');
  dummy = path_split.pop();
  new_path = path(path_split);
  GET new_path;
END %]

[% MACRO extract_file(filename) BLOCK;
  path_split = filename.split('\\\\');
  GET path_split.pop();
END %]

[% MACRO PropertiesConfiguration_app BLOCK -%]
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
[% END %]
[% MACRO PropertiesConfiguration_app_release BLOCK -%]
    <WholeProgramOptimization>true</WholeProgramOptimization>
[% END %]

[% MACRO PropertiesConfiguration_appcon GET PropertiesConfiguration_app %]
[% MACRO PropertiesConfiguration_appcon_release GET PropertiesConfiguration_app_release %]
[% MACRO PropertiesConfiguration_appgui GET PropertiesConfiguration_app %]
[% MACRO PropertiesConfiguration_appgui_release GET PropertiesConfiguration_app_release %]

[% MACRO PropertiesConfiguration_group BLOCK -%]
    <ConfigurationType>StaticLibrary</ConfigurationType>
[% END %]

[% MACRO PropertiesConfiguration_library BLOCK -%]
    <ConfigurationType>StaticLibrary</ConfigurationType>
[% END %]
[% MACRO PropertiesConfiguration_library_shared BLOCK -%]
    <ConfigurationType>DynamicLibrary</ConfigurationType>
[% END %]
[% MACRO PropertiesConfiguration_library_shared_release BLOCK -%]
    <WholeProgramOptimization>true</WholeProgramOptimization>
[% END %]

[% MACRO PropertiesConfiguration_plugin BLOCK -%]
    <ConfigurationType>DynamicLibrary</ConfigurationType>
[% END %]
[% MACRO PropertiesConfiguration_plugin_release BLOCK -%]
    <WholeProgramOptimization>true</WholeProgramOptimization>
[% END %]

[% MACRO PropertiesConfiguration_dll BLOCK -%]
    <ConfigurationType>DynamicLibrary</ConfigurationType>
[% END %]
[% MACRO PropertiesConfiguration_dll_release BLOCK -%]
    <WholeProgramOptimization>true</WholeProgramOptimization>
[% END %]

[% MACRO condition_build_mutator_platform BLOCK -%]
Condition="'$(Configuration)|$(Platform)'=='[% build.name %][% mutator.namesuffix %]|[% platform.name %]'"
[%- END %]
[% MACRO PropertiesDirsAndIncremental_common BLOCK -%]
    <IntDir [% condition_build_mutator_platform %]>[% workbuild([]) %]</IntDir>
[% END %]
[% MACRO PropertiesDirsAndIncremental_target_default BLOCK -%]
    <TargetName [% condition_build_mutator_platform %]>[% my.doc.rawtarget.0 %]</TargetName>
[% END %]

[% MACRO PropertiesDirsAndIncremental_release BLOCK -%]
[% PropertiesDirsAndIncremental_common -%]
    <LinkIncremental [% condition_build_mutator_platform %]>false</LinkIncremental>
[% END %]
[% MACRO PropertiesDirsAndIncremental_debug BLOCK -%]
[% PropertiesDirsAndIncremental_common -%]
    <LinkIncremental [% condition_build_mutator_platform %]>false</LinkIncremental>
[% END %]

[% MACRO PropertiesDirsAndIncremental_appcon BLOCK -%]
[% PropertiesDirsAndIncremental_target_default -%]
[% END %]
[% MACRO PropertiesDirsAndIncremental_appgui BLOCK -%]
[% PropertiesDirsAndIncremental_target_default -%]
[% END %]
[% MACRO PropertiesDirsAndIncremental_library BLOCK -%]
    <OutDir [% condition_build_mutator_platform %]>[% path([my.doc.buildroot.0, extract_dir(add_platform_suffix_dir(slash(my.doc.libname.0))), '']) %]</OutDir>
    <TargetName [% condition_build_mutator_platform %]>[% extract_file(slash(my.doc.libname.0)) %]</TargetName>
[% END %]
[% MACRO PropertiesDirsAndIncremental_library_shared BLOCK -%]
    <OutDir [% condition_build_mutator_platform %]>[% path([my.doc.buildroot.0, extract_dir(add_platform_suffix(my.doc.target.0)), '']) %]</OutDir>
    <TargetName [% condition_build_mutator_platform %]>[% extract_file(add_platform_suffix_filename(slash(my.doc.target.0))) %]</TargetName>
[% END %]
[% MACRO PropertiesDirsAndIncremental_plugin BLOCK -%]
[% PropertiesDirsAndIncremental_target_default -%]
    <IgnoreImportLibrary [% condition_build_mutator_platform %]>true</IgnoreImportLibrary>
[% END %]
[% MACRO PropertiesDirsAndIncremental_dll BLOCK -%]
[% PropertiesDirsAndIncremental_target_default -%]
[% END %]


[% MACRO precompiled_header BLOCK -%]
[%- IF my.doc.pch.0 -%]
      <PrecompiledHeader>Create</PrecompiledHeader>
      <PrecompiledHeaderFile>[% my.doc.pch.0 %]</PrecompiledHeaderFile>
[% END -%]
[% END %]

[% MACRO compiler_release BLOCK -%]
      <Optimization>MaxSpeed</Optimization>
      <StringPooling>true</StringPooling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
[% END %]

[% MACRO compiler_debug BLOCK -%]
      <Optimization>Disabled</Optimization>
      <MinimalRebuild>true</MinimalRebuild>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
[%- precompiled_header -%]
[% END %]

# The default PDB file name
[% MACRO compiler_default_pdb BLOCK -%]
      <ProgramDataBaseFileName>[% workbuild([platform.name, '\\', my.doc.rawtarget.0, '.pdb']) %]</ProgramDataBaseFileName>
[% END %]
[% MACRO compiler_appcon  GET compiler_default_pdb %]
[% MACRO compiler_appgui  GET compiler_default_pdb %]
[% MACRO compiler_library BLOCK -%] 
      <ProgramDataBaseFileName>[% add_platform_suffix_dir(debuginfo) %]</ProgramDataBaseFileName>
[% END %] 
[% MACRO compiler_library_shared GET compiler_default_pdb %]
[% MACRO compiler_plugin  GET compiler_default_pdb %]
[% MACRO compiler_dll     GET compiler_default_pdb %]


[% MACRO linker_release BLOCK -%]
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>LIBC;LIBCD;LIBCMT;LIBCMTD;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
[% END %]
[% MACRO linker_debug BLOCK -%]
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>LIBC;LIBCD;LIBCMT;LIBCMTD;MSVCRT;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
[% END %]

[% MACRO linker_common BLOCK -%]
      <OutputFile>[% add_platform_suffix(path([my.doc.buildroot.0, my.doc.target.0])) %].dll</OutputFile>
      <AdditionalLibraryDirectories>[% composedirs('libdirs', [], platform.suffix) %];%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
[% FOREACH linkerextra IN my.doc.linkerextraxml10 -%] 
      [% linkerextra %] 
[% END -%]
[% END %]

[% MACRO linker_app(subsys) BLOCK -%]
[% linker_common -%]
      <SubSystem>[% subsys %]</SubSystem>
[% END %]
[% MACRO linker_appcon GET linker_app('Console') %]
[% MACRO linker_appgui_release GET linker_app('Windows') %]
[% MACRO linker_appgui_debug GET linker_app('Console') %]

[% MACRO linker_library_shared BLOCK -%]
[% linker_common -%]
      <DelayLoadDLLs>[% glue(my.doc.librarydelay,';','','.dll') %];%(DelayLoadDLLs)</DelayLoadDLLs>
      <ImportLibrary>[% add_platform_suffix_dir(importlib) %].lib</ImportLibrary>
[% END %]

[% MACRO linker_plugin BLOCK -%]
[% linker_common -%]
      <DelayLoadDLLs>[% glue(my.doc.librarydelay,';','','.dll') %];%(DelayLoadDLLs)</DelayLoadDLLs>
[% END %]

[% MACRO linker_dll BLOCK -%]
[% linker_common -%]
      <DelayLoadDLLs>[% glue(my.doc.librarydelay,';','','.dll') %];%(DelayLoadDLLs)</DelayLoadDLLs>
      <ImportLibrary>[% workbuild([platform.name, '\\', my.doc.project.0, '.lib']) %]</ImportLibrary>
[% END %]

[% MACRO library_outfile(suffix) BLOCK -%]
      <OutputFile>[% add_platform_suffix_dir(libfilename(suffix)) %].lib</OutputFile>
[% END %]
[% MACRO librarian_library_release GET library_outfile('') %]
[% MACRO librarian_library_debug   GET library_outfile('_d') %]
[% MACRO librarian_group	   GET library_outfile('') %]
