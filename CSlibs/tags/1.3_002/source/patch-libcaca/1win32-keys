diff -ru ../libcaca.old/caca/driver_win32.c ../libcaca/caca/driver_win32.c
--- ../libcaca.old/caca/driver_win32.c	Tue Dec 12 01:53:51 2006
+++ ./caca/driver_win32.c	Fri Nov  2 15:49:14 2007
@@ -271,6 +271,43 @@
 
                 return 1;
             }
+	    else
+	    {
+		switch (rec.Event.KeyEvent.wVirtualKeyCode)
+		{
+		    case VK_BACK:   ev->data.key.ch = CACA_KEY_BACKSPACE; break;
+		    case VK_TAB:    ev->data.key.ch = CACA_KEY_TAB; break;
+		    case VK_RETURN: ev->data.key.ch = CACA_KEY_RETURN; break;
+		    case VK_PAUSE:  ev->data.key.ch = CACA_KEY_PAUSE; break;
+		    case VK_ESCAPE: ev->data.key.ch = CACA_KEY_ESCAPE; break;
+		    case VK_DELETE: ev->data.key.ch = CACA_KEY_DELETE; break;
+		    case VK_UP:     ev->data.key.ch = CACA_KEY_UP; break;
+		    case VK_DOWN:   ev->data.key.ch = CACA_KEY_DOWN; break;
+		    case VK_LEFT:   ev->data.key.ch = CACA_KEY_LEFT; break;
+		    case VK_RIGHT:  ev->data.key.ch = CACA_KEY_RIGHT; break;
+		    case VK_INSERT: ev->data.key.ch = CACA_KEY_INSERT; break;
+		    case VK_HOME:   ev->data.key.ch = CACA_KEY_HOME; break;
+		    case VK_END:    ev->data.key.ch = CACA_KEY_END; break;
+		    case VK_PRIOR:  ev->data.key.ch = CACA_KEY_PAGEUP; break;
+		    case VK_NEXT:   ev->data.key.ch = CACA_KEY_PAGEDOWN; break;
+		    case VK_F1:     ev->data.key.ch = CACA_KEY_F1;
+		    case VK_F2:     ev->data.key.ch = CACA_KEY_F2; break;
+		    case VK_F3:     ev->data.key.ch = CACA_KEY_F3; break;
+		    case VK_F4:     ev->data.key.ch = CACA_KEY_F4; break;
+		    case VK_F5:     ev->data.key.ch = CACA_KEY_F5; break;
+		    case VK_F6:     ev->data.key.ch = CACA_KEY_F6; break;
+		    case VK_F7:     ev->data.key.ch = CACA_KEY_F7; break;
+		    case VK_F8:     ev->data.key.ch = CACA_KEY_F8; break;
+		    case VK_F9:     ev->data.key.ch = CACA_KEY_F9; break;
+		    case VK_F10:    ev->data.key.ch = CACA_KEY_F10; break;
+		    case VK_F11:    ev->data.key.ch = CACA_KEY_F11; break;
+		    case VK_F12:    ev->data.key.ch = CACA_KEY_F12; break;
+		    default:	     ev->data.key.ch = 0; break;
+		}
+		ev->data.key.utf32 = 0;
+		ev->data.key.utf8[0] = '\0';
+		if (ev->data.key.ch != 0) return 1;
+	    }
         }
 
         if(rec.EventType == MOUSE_EVENT)
