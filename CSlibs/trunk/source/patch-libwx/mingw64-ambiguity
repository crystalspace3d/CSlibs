diff -ru ../libwx.org/include/wx/filename.h ./include/wx/filename.h
--- ../libwx.org/include/wx/filename.h	Sat Apr 16 18:03:00 2011
+++ ./include/wx/filename.h	Sat Dec 24 05:00:43 2011
@@ -390,7 +390,7 @@
 
     // get the canonical path separator for this format
     static wxChar GetPathSeparator(wxPathFormat format = wxPATH_NATIVE)
-        { return GetPathSeparators(format)[0u]; }
+        { return GetPathSeparators(format)[int (0)]; }
 
     // is the char a path separator for this format?
     static bool IsPathSeparator(wxChar ch, wxPathFormat format = wxPATH_NATIVE);
diff -ru ../libwx.org/src/common/cmdline.cpp ./src/common/cmdline.cpp
--- ../libwx.org/src/common/cmdline.cpp	Sat Apr 16 18:05:08 2011
+++ ./src/common/cmdline.cpp	Sat Dec 24 05:03:19 2011
@@ -571,14 +571,14 @@
 
         // empty argument or just '-' is not an option but a parameter
         if ( maybeOption && arg.length() > 1 &&
-                wxStrchr(m_data->m_switchChars, arg[0u]) )
+                wxStrchr(m_data->m_switchChars, arg[int (0)]) )
         {
             bool isLong;
             wxString name;
             int optInd = wxNOT_FOUND;   // init to suppress warnings
 
             // an option or a switch: find whether it's a long or a short one
-            if ( arg[0u] == _T('-') && arg[1u] == _T('-') )
+            if ( arg[int (0)] == _T('-') && arg[int(1)] == _T('-') )
             {
                 // a long one
                 isLong = true;
@@ -657,7 +657,7 @@
                     {
                         // pretend that all the rest of the argument is the
                         // next argument, in fact
-                        wxString arg2 = arg[0u];
+                        wxString arg2 = arg[int (0)];
                         arg2 += arg.Mid(len + 1); // +1 for leading '-'
 
                         m_data->m_arguments.insert
@@ -976,7 +976,7 @@
     // the switch char is usually '-' but this can be changed with
     // SetSwitchChars() and then the first one of possible chars is used
     wxChar chSwitch = !m_data->m_switchChars ? _T('-')
-                                             : m_data->m_switchChars[0u];
+                                             : m_data->m_switchChars[int(0)];
 
     bool areLongOptionsEnabled = AreLongOptionsEnabled();
     size_t n, count = m_data->m_options.GetCount();
diff -ru ../libwx.org/src/common/fileconf.cpp ./src/common/fileconf.cpp
--- ../libwx.org/src/common/fileconf.cpp	Sat Apr 16 18:05:10 2011
+++ ./src/common/fileconf.cpp	Sat Dec 24 05:06:30 2011
@@ -998,7 +998,7 @@
     else
     {
         // writing an entry check that the name is reasonable
-        if ( strName[0u] == wxCONFIG_IMMUTABLE_PREFIX )
+        if ( strName[int (0)] == wxCONFIG_IMMUTABLE_PREFIX )
         {
             wxLogError( _("Config entry name cannot start with '%c'."),
                         wxCONFIG_IMMUTABLE_PREFIX);
diff -ru ../libwx.org/src/common/filename.cpp ./src/common/filename.cpp
--- ../libwx.org/src/common/filename.cpp	Sat Apr 16 18:05:10 2011
+++ ./src/common/filename.cpp	Sat Dec 24 12:06:06 2011
@@ -384,7 +384,7 @@
     }
 
     // 1) Determine if the path is relative or absolute.
-    wxChar leadingChar = path[0u];
+    wxChar leadingChar = path[int (0)];
 
     switch (format)
     {
@@ -1189,8 +1189,8 @@
     {
         if ( !dirs.IsEmpty() )
         {
-            wxString dir = dirs[0u];
-            if ( !dir.empty() && dir[0u] == _T('~') )
+            wxString dir = dirs[int (0)];
+            if ( !dir.empty() && dir[int (0)] == _T('~') )
             {
                 // to make the path absolute use the home directory
                 curDir.AssignDir(wxGetUserHome(dir.c_str() + 1));
@@ -2082,7 +2082,7 @@
             // special VMS hack: remove the initial bracket
             if ( format == wxPATH_VMS )
             {
-                if ( (*pstrPath)[0u] == _T('[') )
+                if ( (*pstrPath)[int (0)] == _T('[') )
                     pstrPath->erase(0, 1);
             }
         }
diff -ru ../libwx.org/src/common/filesys.cpp ./src/common/filesys.cpp
--- ../libwx.org/src/common/filesys.cpp	Sat Apr 16 18:05:11 2011
+++ ./src/common/filesys.cpp	Sat Dec 24 12:11:11 2011
@@ -49,7 +49,7 @@
     l2 = l;
     for (int i = l-1; i >= 0; i--)
     {
-        c = loc[(unsigned int) i];
+        c = loc[i];
         if ( c == wxT('#') )
             l2 = i + 1;
         if ( c == wxT('.') )
@@ -341,9 +341,9 @@
     {
         for (i = m_Path.length()-1; i >= 0; i--)
         {
-            if (m_Path[(unsigned int) i] == wxT('/'))
+            if (m_Path[i] == wxT('/'))
             {
-                if ((i > 1) && (m_Path[(unsigned int) (i-1)] == wxT('/')) && (m_Path[(unsigned int) (i-2)] == wxT(':')))
+                if ((i > 1) && (m_Path[(i-1)] == wxT('/')) && (m_Path[(i-2)] == wxT(':')))
                 {
                     i -= 2;
                     continue;
@@ -354,7 +354,7 @@
                     break;
                 }
             }
-            else if (m_Path[(unsigned int) i] == wxT(':')) {
+            else if (m_Path[i] == wxT(':')) {
                 pathpos = i;
                 break;
             }
@@ -363,7 +363,7 @@
         {
             for (i = 0; i < (int) m_Path.length(); i++)
             {
-                if (m_Path[(unsigned int) i] == wxT(':'))
+                if (m_Path[i] == wxT(':'))
                 {
                     m_Path.Remove(i+1);
                     break;
@@ -415,10 +415,10 @@
     meta = 0;
     for (i = 0; i < ln; i++)
     {
-        switch (loc[i])
+        switch (loc[wxString::size_type (i)])
         {
             case wxT('/') : case wxT(':') : case wxT('#') :
-                meta = loc[i];
+                meta = loc[wxString::size_type (i)];
                 break;
         }
         if (meta != 0) break;
@@ -478,7 +478,7 @@
     m_FindFileHandler = NULL;
 
     for (int i = spec2.length()-1; i >= 0; i--)
-        if (spec2[(unsigned int) i] == wxT('\\')) spec2.GetWritableChar(i) = wxT('/'); // Want to be windows-safe
+        if (spec2[i] == wxT('\\')) spec2.GetWritableChar(i) = wxT('/'); // Want to be windows-safe
 
     node = m_Handlers.GetFirst();
     while (node)
@@ -614,13 +614,13 @@
     // file urls either start with a forward slash (local harddisk),
     // otherwise they have a servername/sharename notation,
     // which only exists on msw and corresponds to a unc
-    if ( path[0u] == wxT('/') && path [1u] != wxT('/'))
+    if ( path[int (0)] == wxT('/') && path [int (1)] != wxT('/'))
     {
         path = path.Mid(1);
     }
     else if ( (url.Find(wxT("file://")) == 0) &&
               (path.Find(wxT('/')) != wxNOT_FOUND) &&
-              (path.length() > 1) && (path[1u] != wxT(':')) )
+              (path.length() > 1) && (path[int (1)] != wxT(':')) )
     {
         path = wxT("//") + path;
     }
diff -ru ../libwx.org/src/common/fmapbase.cpp ./src/common/fmapbase.cpp
--- ../libwx.org/src/common/fmapbase.cpp	Sat Apr 16 18:05:11 2011
+++ ./src/common/fmapbase.cpp	Sat Dec 24 12:12:28 2011
@@ -501,7 +501,7 @@
         // discard the optional quotes
         if ( !cs.empty() )
         {
-            if ( cs[0u] == _T('"') && cs.Last() == _T('"') )
+            if ( cs[int (0)] == _T('"') && cs.Last() == _T('"') )
             {
                 cs = wxString(cs.c_str(), cs.length() - 1);
             }
diff -ru ../libwx.org/src/common/ftp.cpp ./src/common/ftp.cpp
--- ../libwx.org/src/common/ftp.cpp	Sat Apr 16 18:05:11 2011
+++ ./src/common/ftp.cpp	Sat Dec 24 15:50:52 2011
@@ -344,7 +344,7 @@
     }
 
     // if we got here we must have a non empty code string
-    return (char)code[0u];
+    return (char)code[int (0)];
 }
 
 // ----------------------------------------------------------------------------
diff -ru ../libwx.org/src/common/http.cpp ./src/common/http.cpp
--- ../libwx.org/src/common/http.cpp	Sat Apr 16 18:05:12 2011
+++ ./src/common/http.cpp	Sat Dec 24 15:51:11 2011
@@ -309,7 +309,7 @@
 
     m_http_response = wxAtoi(tmp_str2);
 
-    switch (tmp_str2[0u])
+    switch (tmp_str2[int (0)])
     {
         case wxT('1'):
             /* INFORMATION / SUCCESS */
diff -ru ../libwx.org/src/common/menucmn.cpp ./src/common/menucmn.cpp
--- ../libwx.org/src/common/menucmn.cpp	Sat Apr 16 18:05:13 2011
+++ ./src/common/menucmn.cpp	Sat Dec 24 20:05:26 2011
@@ -242,7 +242,7 @@
 
         case 1:
             // it's just a letter
-            keyCode = current[0U];
+            keyCode = current[int (0)];
 
             // if the key is used with any modifiers, make it an uppercase one
             // because Ctrl-A and Ctrl-a are the same; but keep it as is if it's
diff -ru ../libwx.org/src/common/uri.cpp ./src/common/uri.cpp
--- ../libwx.org/src/common/uri.cpp	Sat Apr 16 18:05:16 2011
+++ ./src/common/uri.cpp	Sat Dec 24 15:45:58 2011
@@ -864,7 +864,7 @@
         //                T.path = remove_dot_segments(T.path);
         //             endif;
         //             T.query = R.query;
-        if (m_path.empty() || m_path[0u] != wxT('/'))
+        if (m_path.empty() || m_path[int (0)] != wxT('/'))
         {
             //Merge paths
             const wxChar* op = m_path.c_str();
diff -ru ../libwx.org/src/common/wxchar.cpp ./src/common/wxchar.cpp
--- ../libwx.org/src/common/wxchar.cpp	Sat Apr 16 18:05:16 2011
+++ ./src/common/wxchar.cpp	Sat Dec 24 15:46:30 2011
@@ -825,7 +825,7 @@
                 {
                     // user passed a character explicitely indicated as ANSI...
                     const char buf[2] = { p->pad_char, 0 };
-                    val = wxString(buf, wxConvLibc)[0u];
+                    val = wxString(buf, wxConvLibc)[int (0)];
 
                     //wprintf(L"converting ANSI=>Unicode");   // for debug
                 }
diff -ru ../libwx.org/src/generic/grid.cpp ./src/generic/grid.cpp
--- ../libwx.org/src/generic/grid.cpp	Sat Apr 16 18:05:23 2011
+++ ./src/generic/grid.cpp	Sat Dec 24 20:28:45 2011
@@ -3370,7 +3370,7 @@
     wxString s2;
     for ( i = 0; i < n; i++ )
     {
-        s2 += s[n - i - 1];
+        s2 += s[wxString::size_type (n - i - 1)];
     }
 
     return s2;
diff -ru ../libwx.org/src/generic/logg.cpp ./src/generic/logg.cpp
--- ../libwx.org/src/generic/logg.cpp	Sat Apr 16 18:05:24 2011
+++ ./src/generic/logg.cpp	Sat Dec 24 20:18:04 2011
@@ -257,7 +257,7 @@
 
     wxString appName = wxTheApp->GetAppName();
     if ( !appName.empty() )
-        appName[0u] = (wxChar)wxToupper(appName[0u]);
+        appName[int (0)] = (wxChar)wxToupper(appName[int (0)]);
 
     long style;
     wxString titleFormat;
diff -ru ../libwx.org/src/html/htmlcell.cpp ./src/html/htmlcell.cpp
--- ../libwx.org/src/html/htmlcell.cpp	Sat Apr 16 18:05:26 2011
+++ ./src/html/htmlcell.cpp	Sat Dec 24 20:31:42 2011
@@ -363,7 +363,7 @@
 void wxHtmlWordCell::SetPreviousWord(wxHtmlWordCell *cell)
 {
     if ( cell && m_Parent == cell->m_Parent &&
-         !wxIsspace(cell->m_Word.Last()) && !wxIsspace(m_Word[0u]) )
+         !wxIsspace(cell->m_Word.Last()) && !wxIsspace(m_Word[int (0)]) )
     {
         m_allowLinebreak = false;
     }
diff -ru ../libwx.org/src/msw/mimetype.cpp ./src/msw/mimetype.cpp
--- ../libwx.org/src/msw/mimetype.cpp	Sat Apr 16 18:05:36 2011
+++ ./src/msw/mimetype.cpp	Sat Dec 24 15:48:12 2011
@@ -549,7 +549,7 @@
     wxCHECK_MSG( !ext.empty(), NULL,
                  _T("Associate() needs non empty extension") );
 
-    if ( ext[0u] != _T('.') )
+    if ( ext[int (0)] != _T('.') )
         extWithDot = _T('.');
     extWithDot += ext;
 
@@ -622,7 +622,7 @@
     for (iExtCount=1; iExtCount < ftInfo.GetExtensionsCount(); iExtCount++ )
     {
         ext = ftInfo.GetExtensions()[iExtCount];
-        if ( ext[0u] != _T('.') )
+        if ( ext[int (0)] != _T('.') )
            extWithDot = _T('.');
         extWithDot += ext;
 
